name: CI

on:
  push:
    branches: ["main", "develop"]
  pull_request:
    types: [opened, synchronize]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  checks:
    name: Checks
    runs-on: ubuntu-latest
    env:
      TURBO_REF_FILTER: ${{ github.event_name == 'pull_request' && github.event.pull_request.base.sha || github.event.before }}
    outputs:
      changed_packages: ${{ steps.output-changed-packages.outputs.changed_packages }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Create .npmrc file
        run: |
          cp .npmrc.template .npmrc
          sed -i "s/REPLACE_GITHUB_ACCESS_TOKEN/$NPM_TOKEN/g" .npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Install dependencies
        run: pnpm install

      - name: Changeset
        id: changeset
        run: |
          echo "$(pnpm turbo build --dry-run=json --filter="...[$TURBO_REF_FILTER]")"
          echo 'result<<CHANGESET_DELIMITER' >> $GITHUB_OUTPUT
          echo "$(pnpm turbo build --dry-run=json --filter="...[$TURBO_REF_FILTER]")" >> $GITHUB_OUTPUT
          echo 'CHANGESET_DELIMITER' >> $GITHUB_OUTPUT

      - name: Output changed packages
        id: output-changed-packages
        run: |
          echo 'changed_packages<<CHANGED_PACKAGES_DELIMITER' >> $GITHUB_OUTPUT
          echo "${{ toJSON(fromJSON(steps.changeset.outputs.result).packages) }}" >> $GITHUB_OUTPUT
          echo 'CHANGED_PACKAGES_DELIMITER' >> $GITHUB_OUTPUT

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: "checks"
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Run lint check
        # TODO: run lints based on "changed_packages"
        run: pnpm run lint

      - name: Run type check
        run: pnpm run type-check

      - name: Run format check
        run: pnpm run format:check

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: "checks"
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Test
        # TODO: run tests based on "changed_packages"
        run: pnpm run test

  build:
    name: Build
    timeout-minutes: 15
    runs-on: ubuntu-latest
    needs: ["lint", "test"]
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Build
        # TODO: run build based on "changed_packages"
        run: pnpm run build
