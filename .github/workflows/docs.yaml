name: docs

on:
  workflow_call:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-docs
  cancel-in-progress: true

permissions:
  contents: read
  packages: write
  actions: write

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      IS_DEV_RELEASE: ${{ github.ref == 'refs/head/develop' }}
      IS_PROD_RELEASE: ${{ github.ref == 'refs/head/main' }}
      DEV_SUFFIX_TAG: "-dev"
      PROD_SUFFIX_TAG: "-prod"
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get package tag/version
        id: package-version
        # if: ${{ github.event_name == 'push' }}
        # this outputs PACKAGE_VERSION=1.x.x into $GITHUB_OUTPUT
        run: |
          jq -r '"PACKAGE_VERSION=\(.version)"' apps/docs/package.json >> "$GITHUB_OUTPUT"

      - name: Get image final name
        id: docker-image-name
        run: |
          echo "DOCKER_IMAGE_NAME=$DOCKER_REGISTRY/$IMAGE_BASE_NAME$([[ "$IS_DEV_RELEASE" == "true" ]] && echo "$DEV_SUFFIX_TAG" || echo  "$PROD_SUFFIX_TAG")" >> "$GITHUB_OUTPUT"
        env:
          IMAGE_BASE_NAME: my-turborepo-docs
          DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ steps.docker-image-name.outputs.DOCKER_IMAGE_NAME }}
          tags: |
            type=raw,value=${{ steps.package-version.outputs.PACKAGE_VERSION }}

      - name: Login to Docker Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          path: ./apps/docker/Dockerfile
          push: true
          # push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
